/***********************************************************************
    filename:   SILLYImage.icpp 
    created:    10 Jun 2006
    author:     Olivier Delannoy

    purpose:    Inline definition of the image class   
*************************************************************************/
/***************************************************************************
 *   Copyright (C) 2004 - 2006 Paul D Turner & The CEGUI Development Team
 *
 *   Permission is hereby granted, free of charge, to any person obtaining
 *   a copy of this software and associated documentation files (the
 *   "Software"), to deal in the Software without restriction, including
 *   without limitation the rights to use, copy, modify, merge, publish,
 *   distribute, sublicense, and/or sell copies of the Software, and to
 *   permit persons to whom the Software is furnished to do so, subject to
 *   the following conditions:
 *
 *   The above copyright notice and this permission notice shall be
 *   included in all copies or substantial portions of the Software.
 *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 *   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 *   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *   OTHER DEALINGS IN THE SOFTWARE.
 ***************************************************************************/

// Start of section namespace SILLY
namespace SILLY
{

inline bool Image::isValid() const
{
    return d_imageContext && d_pixels;
}

inline size_t Image::getWidth() const
{
    return d_imageContext->getWidth();
}

inline size_t Image::getHeight() const
{
    return d_imageContext->getHeight();
}

inline PixelFormat Image::getSourcePixelFormat() const
{
    return d_pfSource;
}

inline PixelFormat Image::getPixelFormat() const
{
    return d_imageContext->getPixelFormat();
}

inline const byte* Image::getPixelsDataPtr() const
{
    return d_pixels;
}

inline size_t Image::getPixelsDataSize() const
{
    return getWidth() * getHeight() * d_bpp;
}

inline Image::~Image()
{
    delete [] d_pixels;
    if (d_imageLoader)
        d_imageLoader->destroyContext(d_imageContext);
}
inline const char* Image::getLoaderIdentifierString() const
{
    if (d_imageLoader)
        return d_imageLoader->getIdentifierString();
    return 0;
}

} // End of section namespace SILLY

